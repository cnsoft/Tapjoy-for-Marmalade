callbacks
errors

include:

typedef enum s3eTapjoyError
{
	// Generic error codes (s3e convention)
	TAPJOY_ERROR_NONE				= 0,  // No Error.
    TAPJOY_ERROR_PARAM				= 1,  // Invalid parameter.
    TAPJOY_ERROR_TOO_MANY			= 2,  // Maximum number of callbacks exceeded.
    TAPJOY_ERROR_ALREADY			= 3,  // The specified callback is already registered 
    TAPJOY_ERROR_NOT_FOUND			= 4,  // The specified callback was not found for removal 
    TAPJOY_ERROR_UNAVAIL			= 5,  // Feature/function is unavailable on this device/platform. 
    TAPJOY_ERROR_DEVICE				= 6,  // The underlying system-specific device failed 
    TAPJOY_ERROR_UNSUPPORTED		= 7,  // This implementation of s3e does not support this feature 
    TAPJOY_ERROR_MEM				= 8,  // Out of memory performing operation 
    TAPJOY_ERROR_UNKNOWN			= 9,  // Unknown error 
    TAPJOY_ERROR_INVALID_DRIVE		= 10, // Invalid/unsupported drive specified in path 
    TAPJOY_ERROR_INVALID_PATH		= 11, // The specified path is not valid (e.g. opening /../file) 
    TAPJOY_ERROR_DATA				= 12, // Data read/write error 
    TAPJOY_ERROR_ACCESS				= 13, // Access denied or insufficient permissions for operation. 
    TAPJOY_ERROR_STATE				= 14, // The system could not perform the desired action becasue it is in the wrong 

    // Tapjoy specific error codes
    TAPJOY_ERROR_CONNECT			= 1000,
	TAPJOY_ERROR_NETWORK_ERROR		= 5000,
	TAPJOY_ERROR_NO_CONTENT			= 5001,
} s3eTapjoyError;

typedef enum s3eTapjoyCallback
{
	S3E_TAPJOY_CALLBACK_CONNECT_RESULT,				// Callback fired when TapjoyConnect succeeds or fails (only available on iOS?)
	S3E_TAPJOY_CALLBACK_GET_TAP_POINTS,
	S3E_TAPJOY_CALLBACK_SPEND_TAP_POINTS,
	S3E_TAPJOY_CALLBACK_AWARD_TAP_POINTS,
	S3E_TAPJOY_CALLBACK_GET_FEATURED_APP,
	S3E_TAPJOY_CALLBACK_VG_ITEM_DOWNLOAD_COMPLETE,	// Callback fired when a virtual good (that has previously not been downloaded) has finished downloading.
	S3E_TAPJOY_CALLBACK_VG_ITEM_PURCHASE_COMPLETE,	// Callback fired when any virtual good has been purchased.

	S3E_TAPJOY_CALLBACK_GET_DISPLAY_AD,
	S3E_TAPJOY_CALLBACK_EARNED_TAP_POINTS,
	S3E_TAPJOY_CALLBACK_VIDEO_STATUS,

    S3E_TAPJOY_CALLBACK_MAX
} s3eTapjoyCallback;

typedef enum s3eTapjoyVideoStatus
{
	TAPJOY_VIDEO_READY,
	TAPJOY_VIDEO_COMPLETE,
	TAPJOY_VIDEO_ERROR_MEDIA_STORAGE_UNAVAILABLE,
	TAPJOY_VIDEO_ERROR_NETWORK_ERROR_ON_INIT_VIDEOS,
	TAPJOY_VIDEO_ERROR_UNABLE_TO_PLAY_VIDEO,
} s3eTapjoyVideoStatus;

#define  TAPJOY_VG_STORE_ITEM_MAX_ITEMS				25
#define  TAPJOY_VG_STORE_ITEM_STORE_ITEM			0
#define  TAPJOY_VG_STORE_ITEM_PURCHASED_ITEM		1

#define TJC_AD_BANNERSIZE_320X50	"320x50"
#define TJC_AD_BANNERSIZE_640X100	"6400x100"
#define TJC_AD_BANNERSIZE_768X90	"768x90"

typedef struct TapjoyImage
{
    void*           m_Data;				// Tightly packed ARGB Pixel data
    int				m_BitsPerPixel;		// Always 8
    int				m_Width;
    int				m_Height;
} TapjoyImage;

typedef struct TapjoyVGStoreItem
{
	const char*		m_VGStoreItemID;
	const char*		m_ProductID;
	int				m_Price;
	const char*		m_Name;
	const char*		m_Description;
	const char*		m_VGStoreItemTypeName;
	int				m_NumberOwned;
	const char*		m_ThumbImageUrl;
	const char*		m_FullImageUrl;
	const char*		m_DatafileUrl;

	TapjoyImage*	m_ThumbImage;
	s3eBool			m_Shown;
} TapjoyVGStoreItem;

typedef struct TapjoyFeaturedAppObject
{
	const char*			m_Cost;
	const char*			m_StoreID;
	const char*			m_Name;
	const char*			m_Description;
	int					m_Amount;
	const char*			m_IconURL;
	const char*			m_RedirectURL;
	int					m_MaxTimesToDisplayThisApp;
	const char*			m_FullScreenAdURL;
} TapjoyFeaturedAppObject;

typedef int32 (*TapjoyGenericCB)(void* instance, void* systemData, void* userData);

//----------------------------------------
// GET POINTS CALLBACK
//----------------------------------------
typedef struct TapjoyGetTapPointsResult
{
	s3eTapjoyError		m_Error;
	const char*		m_ErrorString;

	const char*		m_CurrencyName;
	int				m_PointTotal;

} TapjoyGetTapPointsResult;

typedef int32 (*TapjoyGetTapPointsCallbackFn)(TapjoyGetTapPointsResult* result, void* userData);

//----------------------------------------
// SPEND POINTS CALLBACK
//----------------------------------------
typedef struct TapjoySpendTapPointsResult
{
	s3eTapjoyError		m_Error;
	const char*		m_ErrorString;

	const char*		m_CurrencyName;
	int				m_PointTotal;

} TapjoySpendTapPointsResult;

typedef int32 (*TapjoySpendTapPointsCallbackFn)(TapjoySpendTapPointsResult* result, void* userData);

//----------------------------------------
// AWARD POINTS CALLBACK
//----------------------------------------
typedef struct TapjoyAwardTapPointsResult
{
	s3eTapjoyError		m_Error;
	const char*		m_ErrorString;

	const char*		m_CurrencyName;
	int				m_PointTotal;

} TapjoyAwardTapPointsResult;

typedef int32 (*TapjoyAwardTapPointsCallbackFn)(TapjoyAwardTapPointsResult* result, void* userData);

//----------------------------------------
// EARNED POINTS CALLBACK
//----------------------------------------
typedef struct TapjoyEarnedTapPointsResult
{
	s3eTapjoyError		m_Error;
	const char*		m_ErrorString;

	const char*		m_CurrencyName;
	int				m_Amount;

} TapjoyEarnedTapPointsResult;

typedef int32 (*TapjoyEarnedTapPointsCallbackFn)(TapjoyEarnedTapPointsResult* result, void* userData);

//----------------------------------------
// VIDEO CALLBACK
//----------------------------------------
typedef struct TapjoyVideoStatusResult
{
	s3eTapjoyError		m_Error;
	const char*		m_ErrorString;
	
	int 			m_statusCode;
} TapjoyVideoStatusResult;

typedef int32 (*TapjoyVideoStatusCallbackFn)(TapjoyVideoStatusResult* result, void* userData);

//----------------------------------------
// FULL SCREEN AD CALLBACK
//----------------------------------------
typedef struct TapjoyGetFeaturedAppResult
{
	s3eTapjoyError					m_Error;
	const char*					m_ErrorString;

	TapjoyFeaturedAppObject	m_FeaturedAppObject;
} TapjoyGetFeaturedAppResult;

typedef int32 (*TapjoyGetFeaturedAppCallbackFn)(TapjoyGetFeaturedAppResult* result, void* userData);

//----------------------------------------
// BANNER AD CALLBACK
//----------------------------------------
typedef struct TapjoyGetDisplayAdResult
{
	s3eTapjoyError					m_Error;
	const char*					m_ErrorString;
} TapjoyGetDisplayAdResult;

typedef int32 (*TapjoyGetDisplayAdCallbackFn)(TapjoyGetDisplayAdResult* result, void* userData);


functions:

// Should be called before and other functions
// iOS: Calls requestTapjoyConnectWithAppID
// Android: Calls getTapjoyConnectInstance
// appID ignored on Android, read from AndroidManifest.xml
s3eResult TapjoyRequestConnect(const char* appID, const char* secretKey) S3E_RESULT_ERROR run_on_os_thread

s3eResult TapjoyActionComplete(const char* actionID) S3E_RESULT_ERROR run_on_os_thread

s3eResult TapjoySetUserID(const char* userID) S3E_RESULT_ERROR run_on_os_thread

s3eResult TapjoyShowOffers() S3E_RESULT_ERROR run_on_os_thread

s3eResult TapjoyShowOffersWithCurrenyID(const char* currencyID, s3eBool enableCurrencySelector) S3E_RESULT_ERROR run_on_os_thread

s3eResult TapjoyGetTapPoints(TapjoyGetTapPointsCallbackFn callbackFn, void* userData) S3E_RESULT_ERROR run_on_os_thread

s3eResult TapjoySpendTapPoints(int amount, TapjoySpendTapPointsCallbackFn callbackFn, void* userData) S3E_RESULT_ERROR run_on_os_thread

s3eResult TapjoyAwardTapPoints(int amount, TapjoyAwardTapPointsCallbackFn callbackFn, void* userData) S3E_RESULT_ERROR run_on_os_thread

s3eResult TapjoyShowVirtualGoods() S3E_RESULT_ERROR run_on_os_thread

TapjoyVGStoreItem* TapjoyGetPurchasedItem(int index) NULL run_on_os_thread

TapjoyVGStoreItem* TapjoyGetAvailableItem(int index) NULL run_on_os_thread

s3eResult TapjoyGetFeaturedApp(TapjoyGetFeaturedAppCallbackFn callbackFn, void* userData) S3E_RESULT_ERROR run_on_os_thread

s3eResult TapjoyShowFeaturedAppFullScreenAd() S3E_RESULT_ERROR run_on_os_thread

s3eResult TapjoySetFeaturedAppDisplayCount(int count) S3E_RESULT_ERROR run_on_os_thread

// Unavailable on Android
s3eResult TapjoySetTransitionEffect(int transition) S3E_RESULT_ERROR run_on_os_thread

// Unavailable on Android
s3eResult TapjoySetOffersNavBarImage(const char* pPNGFilename) S3E_RESULT_ERROR run_on_os_thread

s3eResult TapjoySetUserDefinedColor(int your_color_in_0xAAARRGGBB_format) S3E_RESULT_ERROR run_on_os_thread

// adContentSize must be one of TJC_AD_BANNERSIZE_320X50 or TJC_AD_BANNERSIZE_480X32.
// Parameters are ignored on Android
s3eResult TapjoyGetDisplayAd(const char* adContentSize, s3eBool shouldRefreshAd, TapjoyGetDisplayAdCallbackFn callbackFn, void* userData) S3E_RESULT_ERROR run_on_os_thread

// Set the pixel rectangle to display current advertisement, if downloaded
s3eResult TapjoySetDisplayAdView(int left, int top, int width, int height) S3E_RESULT_ERROR run_on_os_thread

// New
s3eResult TapjoyGetFeaturedAppWithCurrencyID(const char* currencyID, TapjoyGetFeaturedAppCallbackFn callbackFn, void* userData) S3E_RESULT_ERROR run_on_os_thread
s3eResult TapjoyGetDisplayAdWithCurrencyID(const char* currencyID, const char* adContentSize, s3eBool shouldRefreshAd, TapjoyGetDisplayAdCallbackFn callbackFn, void* userData) S3E_RESULT_ERROR run_on_os_thread

s3eResult TapjoyInitVideoAd(TapjoyVideoStatusCallbackFn callbackFn) S3E_RESULT_ERROR run_on_os_thread
s3eResult TapjoyEnableVideoCache(s3eBool enable) S3E_RESULT_ERROR run_on_os_thread
s3eResult TapjoySetVideoCacheCount(int count) S3E_RESULT_ERROR run_on_os_thread

// ANDROID SPECIFIC
s3eResult TapjoySetEarnedTapPointsNotifier(TapjoyEarnedTapPointsCallbackFn callbackFn) S3E_RESULT_ERROR run_on_os_thread
s3eResult TapjoyEnableBannerAdAutoRefresh(s3eBool shouldAutoRefresh) S3E_RESULT_ERROR run_on_os_thread
s3eResult TapjoyEnableLogging(s3eBool enable) S3E_RESULT_ERROR run_on_os_thread

s3eResult TapjoyShowDisplayAd() S3E_RESULT_ERROR run_on_os_thread
s3eResult TapjoyHideDisplayAd() S3E_RESULT_ERROR run_on_os_thread

append:
